/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.mavenproject1;

import dao.PersonDao;
import dao.PhoneNumberDao;
import entity.Person;
import entity.PhoneNumbers;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author ирина
 */
public class UpdateContact extends javax.swing.JFrame {

    private Person person;
    private List<PhoneNumbers> phoneNumbers;

    /**
     * Creates new form UpdateContact
     */
    public UpdateContact(Person person, List<PhoneNumbers> phoneNumbers) {
        this.person = person;
        this.phoneNumbers = phoneNumbers;
        initComponents();
        initPhoneNumbersTable(phoneNumbers);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        nameTF.setText(person.getName());
        surnameTF.setText(person.getSurname());
        patronymicTF.setText(person.getPatronymic());
        addressTF.setText(person.getAddress());
    }

    private void initPhoneNumbersTable(List<PhoneNumbers> phoneNumbers) {
        String[] columnNames = {
            "Phone number",
            "Phone type"
        };

        DefaultTableModel model = new DefaultTableModel();
        phoneNumbersTable.setModel(model);
        model.setColumnIdentifiers(columnNames);
        for (PhoneNumbers phoneNumber : phoneNumbers) {
            Object[] o = new Object[2];
            o[0] = phoneNumber.getNumber();
            o[1] = phoneNumber.getType();
            model.addRow(o);
        }
        phoneNumbersTable.setRowSelectionAllowed(true);
        phoneNumbersTable.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        TableColumn testColumn = phoneNumbersTable.getColumnModel().getColumn(1);
        JComboBox<String> comboBox = new JComboBox<>();
        comboBox.addItem("Work");
        comboBox.addItem("Home");
        comboBox.addItem("Fax");
        testColumn.setCellEditor(new DefaultCellEditor(comboBox));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        surnameLabel = new javax.swing.JLabel();
        surnameTF = new javax.swing.JTextField();
        patronymicLabel = new javax.swing.JLabel();
        patronymicTF = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        addressTF = new javax.swing.JTextField();
        phoneNumbersLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        phoneNumbersTable = new javax.swing.JTable();
        updateButton = new javax.swing.JButton();
        addPhoneNumberButton = new javax.swing.JButton();
        delPhoneNumberButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Update contact");

        nameLabel.setText("Name");

        surnameLabel.setText("Surname");

        patronymicLabel.setText("Patronymic");

        addressLabel.setText("Address");

        phoneNumbersLabel.setText("Phone numbers");

        phoneNumbersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        phoneNumbersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                phoneNumbersTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(phoneNumbersTable);

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        addPhoneNumberButton.setText("add phone number");
        addPhoneNumberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPhoneNumberButtonActionPerformed(evt);
            }
        });

        delPhoneNumberButton.setText("delete number");
        delPhoneNumberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delPhoneNumberButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameLabel)
                            .addComponent(surnameLabel)
                            .addComponent(patronymicLabel)
                            .addComponent(addressLabel)
                            .addComponent(nameTF)
                            .addComponent(surnameTF)
                            .addComponent(patronymicTF)
                            .addComponent(addressTF, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(delPhoneNumberButton, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addPhoneNumberButton))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(phoneNumbersLabel)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(phoneNumbersLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(surnameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(surnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(patronymicLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(patronymicTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addressLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addressTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPhoneNumberButton)
                    .addComponent(delPhoneNumberButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addPhoneNumberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPhoneNumberButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) phoneNumbersTable.getModel();
        model.addRow(new Object[]{"", ""});
    }//GEN-LAST:event_addPhoneNumberButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        String name = nameTF.getText().toUpperCase();
        String surname = surnameTF.getText().toUpperCase();
        String patronymic = patronymicTF.getText().toUpperCase();
        String address = addressTF.getText().toUpperCase();
        if (name.equals("") || surname.equals("") || patronymic.equals("") || address.equals("")) {
            JOptionPane.showMessageDialog(new JFrame(), "Enter correct contact.");
        } else {
            person.setName(name);
            person.setSurname(surname);
            person.setAddress(address);
            person.setPatronymic(patronymic);
            if (phoneNumbersTable.isEditing()) {
                phoneNumbersTable.getCellEditor().stopCellEditing();
            }
            DefaultTableModel model = (DefaultTableModel) phoneNumbersTable.getModel();
            List<PhoneNumbers> listNumbers = new ArrayList<>();
            for (int count = 0; count < model.getRowCount(); count++) {
                PhoneNumbers phoneNumber = new PhoneNumbers();
                phoneNumber.setNumber((String) model.getValueAt(count, 0));
                phoneNumber.setType((String) model.getValueAt(count, 1));
                phoneNumber.setIdPerson(person.getId());
                boolean isExist = false;
                for (PhoneNumbers pNumber : phoneNumbers) {
                    if (pNumber.getNumber().equals(phoneNumber.getNumber())) {
                        isExist = true;
                    }
                }
                if (!isExist) {
                    phoneNumbers.add(phoneNumber);
                }
            }
            try (PersonDao personDao = new PersonDao(); PhoneNumberDao phoneNumbersDao = new PhoneNumberDao()) {
                personDao.update(person);
                for (PhoneNumbers pNumber : phoneNumbers) {
                    if (pNumber.getId() == 0) {
                        phoneNumbersDao.create(pNumber);
                    } else {
                        phoneNumbersDao.update(pNumber);
                    }
                }
                JOptionPane.showMessageDialog(new JFrame(), "Successfully updated");
            } catch (SQLException ex) {
                ex.printStackTrace();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }

    }//GEN-LAST:event_updateButtonActionPerformed

    private void delPhoneNumberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delPhoneNumberButtonActionPerformed
        List<PhoneNumbers> listNumbers = new ArrayList<>();
        if (phoneNumbersTable.getSelectedRows().length > -1) {
            int[] selectedrows = phoneNumbersTable.getSelectedRows();
            for (int i = 0; i < selectedrows.length; i++) {
                PhoneNumbers numbers = new PhoneNumbers();
                numbers.setNumber((String) phoneNumbersTable.getValueAt(selectedrows[i], 0));
                numbers.setType((String) phoneNumbersTable.getValueAt(selectedrows[i], 1));
                for (PhoneNumbers pNumbers : phoneNumbers) {
                    if (pNumbers.getNumber().equals(numbers.getNumber())) {
                        numbers.setId(pNumbers.getId());
                        numbers.setIdPerson(pNumbers.getIdPerson());
                    }
                }
                listNumbers.add(numbers);
            }
        }
        try (PhoneNumberDao phoneNumbersDao = new PhoneNumberDao()) {
            phoneNumbersDao.delete(listNumbers);
            DefaultTableModel model = (DefaultTableModel) phoneNumbersTable.getModel();
            int[] rows = phoneNumbersTable.getSelectedRows();
            for (int i = 0; i < rows.length; i++) {
                model.removeRow(rows[i] - i);
                phoneNumbers.remove(rows[i] - i);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_delPhoneNumberButtonActionPerformed

    private void phoneNumbersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_phoneNumbersTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumbersTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateContact(new Person(), (List<PhoneNumbers>) new PhoneNumbers()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPhoneNumberButton;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField addressTF;
    private javax.swing.JButton delPhoneNumberButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTF;
    private javax.swing.JLabel patronymicLabel;
    private javax.swing.JTextField patronymicTF;
    private javax.swing.JLabel phoneNumbersLabel;
    private javax.swing.JTable phoneNumbersTable;
    private javax.swing.JLabel surnameLabel;
    private javax.swing.JTextField surnameTF;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
